// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hello_world.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	hello_world.proto

It has these top-level messages:
	HelloRequest
	HelloResponse
	UserReply
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type HelloRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *HelloRequest) Reset()                    { *m = HelloRequest{} }
func (m *HelloRequest) String() string            { return proto1.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()               {}
func (*HelloRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HelloRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type HelloResponse struct {
	// 用户ID
	Id        int64      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	UserReply *UserReply `protobuf:"bytes,2,opt,name=user_reply,json=userReply" json:"user_reply,omitempty"`
}

func (m *HelloResponse) Reset()                    { *m = HelloResponse{} }
func (m *HelloResponse) String() string            { return proto1.CompactTextString(m) }
func (*HelloResponse) ProtoMessage()               {}
func (*HelloResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HelloResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *HelloResponse) GetUserReply() *UserReply {
	if m != nil {
		return m.UserReply
	}
	return nil
}

type UserReply struct {
	// 用户ID
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// 用户名
	Username string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	// 证件类型
	Type string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	// 真实姓名
	Truename string `protobuf:"bytes,4,opt,name=truename" json:"truename,omitempty"`
	// 邮箱
	Email string `protobuf:"bytes,5,opt,name=email" json:"email,omitempty"`
	// 手机号
	Mobile string `protobuf:"bytes,6,opt,name=mobile" json:"mobile,omitempty"`
	// 是否开启支付验证
	PayPassword string `protobuf:"bytes,7,opt,name=payPassword" json:"payPassword,omitempty"`
	// 认证等级
	AuthLevel int32 `protobuf:"varint,8,opt,name=authLevel" json:"authLevel,omitempty"`
	// openId
	OpenId string `protobuf:"bytes,10,opt,name=openId" json:"openId,omitempty"`
}

func (m *UserReply) Reset()                    { *m = UserReply{} }
func (m *UserReply) String() string            { return proto1.CompactTextString(m) }
func (*UserReply) ProtoMessage()               {}
func (*UserReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UserReply) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserReply) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UserReply) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *UserReply) GetTruename() string {
	if m != nil {
		return m.Truename
	}
	return ""
}

func (m *UserReply) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserReply) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *UserReply) GetPayPassword() string {
	if m != nil {
		return m.PayPassword
	}
	return ""
}

func (m *UserReply) GetAuthLevel() int32 {
	if m != nil {
		return m.AuthLevel
	}
	return 0
}

func (m *UserReply) GetOpenId() string {
	if m != nil {
		return m.OpenId
	}
	return ""
}

func init() {
	proto1.RegisterType((*HelloRequest)(nil), "proto.HelloRequest")
	proto1.RegisterType((*HelloResponse)(nil), "proto.HelloResponse")
	proto1.RegisterType((*UserReply)(nil), "proto.UserReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for HelloWorld service

type HelloWorldClient interface {
	Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error)
}

type helloWorldClient struct {
	cc *grpc.ClientConn
}

func NewHelloWorldClient(cc *grpc.ClientConn) HelloWorldClient {
	return &helloWorldClient{cc}
}

func (c *helloWorldClient) Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error) {
	out := new(HelloResponse)
	err := grpc.Invoke(ctx, "/proto.HelloWorld/Hello", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for HelloWorld service

type HelloWorldServer interface {
	Hello(context.Context, *HelloRequest) (*HelloResponse, error)
}

func RegisterHelloWorldServer(s *grpc.Server, srv HelloWorldServer) {
	s.RegisterService(&_HelloWorld_serviceDesc, srv)
}

func _HelloWorld_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloWorldServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.HelloWorld/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloWorldServer).Hello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HelloWorld_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.HelloWorld",
	HandlerType: (*HelloWorldServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hello",
			Handler:    _HelloWorld_Hello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hello_world.proto",
}

func init() { proto1.RegisterFile("hello_world.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 288 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x51, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0x36, 0x69, 0x53, 0x9b, 0xa9, 0x8a, 0x8e, 0x45, 0x96, 0xe2, 0x21, 0xe4, 0xd4, 0x53, 0x85,
	0xea, 0x13, 0x78, 0x52, 0xf0, 0x50, 0x16, 0xc4, 0x63, 0x49, 0xc9, 0x40, 0x03, 0xdb, 0xec, 0xba,
	0x9b, 0x58, 0xf2, 0xd0, 0xbe, 0x83, 0xec, 0x6c, 0x5a, 0x2b, 0x9e, 0x76, 0xbe, 0x1f, 0x66, 0x3f,
	0xbe, 0x81, 0x9b, 0x2d, 0x29, 0xa5, 0xd7, 0x7b, 0x6d, 0x55, 0xb9, 0x30, 0x56, 0x37, 0x1a, 0x13,
	0x7e, 0xf2, 0x1c, 0x2e, 0x5e, 0xbc, 0x26, 0xe9, 0xb3, 0x25, 0xd7, 0x20, 0xc2, 0xb0, 0x2e, 0x76,
	0x24, 0xa2, 0x2c, 0x9a, 0xa7, 0x92, 0xe7, 0x7c, 0x05, 0x97, 0xbd, 0xc7, 0x19, 0x5d, 0x3b, 0xc2,
	0x2b, 0x88, 0xab, 0x92, 0x2d, 0x03, 0x19, 0x57, 0x25, 0x3e, 0x00, 0xb4, 0x8e, 0xec, 0xda, 0x92,
	0x51, 0x9d, 0x88, 0xb3, 0x68, 0x3e, 0x59, 0x5e, 0x87, 0x7f, 0x16, 0xef, 0x8e, 0xac, 0xf4, 0xbc,
	0x4c, 0xdb, 0xc3, 0x98, 0x7f, 0x47, 0x90, 0x1e, 0x85, 0x7f, 0xeb, 0x66, 0x30, 0xf6, 0x56, 0xce,
	0x11, 0x73, 0x8e, 0x23, 0xf6, 0xf9, 0x9a, 0xce, 0x90, 0x18, 0x84, 0x7c, 0x7e, 0xf6, 0xfe, 0xc6,
	0xb6, 0xc4, 0xfe, 0x61, 0xf0, 0x1f, 0x30, 0x4e, 0x21, 0xa1, 0x5d, 0x51, 0x29, 0x91, 0xb0, 0x10,
	0x00, 0xde, 0xc1, 0x68, 0xa7, 0x37, 0x95, 0x22, 0x31, 0x62, 0xba, 0x47, 0x98, 0xc1, 0xc4, 0x14,
	0xdd, 0xaa, 0x70, 0x6e, 0xaf, 0x6d, 0x29, 0xce, 0x59, 0x3c, 0xa5, 0xf0, 0x1e, 0xd2, 0xa2, 0x6d,
	0xb6, 0x6f, 0xf4, 0x45, 0x4a, 0x8c, 0xb3, 0x68, 0x9e, 0xc8, 0x5f, 0xc2, 0xef, 0xd5, 0x86, 0xea,
	0xd7, 0x52, 0x40, 0xd8, 0x1b, 0xd0, 0xf2, 0x19, 0x80, 0x1b, 0xfc, 0xf0, 0x07, 0xc0, 0x27, 0x48,
	0x18, 0xe1, 0x6d, 0xdf, 0xd1, 0xe9, 0x05, 0x66, 0xd3, 0xbf, 0x64, 0xa8, 0x3c, 0x3f, 0xdb, 0x8c,
	0x98, 0x7e, 0xfc, 0x09, 0x00, 0x00, 0xff, 0xff, 0x67, 0xf0, 0xb9, 0x57, 0xcc, 0x01, 0x00, 0x00,
}
